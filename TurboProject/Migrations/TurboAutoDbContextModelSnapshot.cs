// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TurboAuto.Persistence.Contexts;

#nullable disable

namespace TurboProject.Migrations
{
    [DbContext(typeof(TurboAutoDbContext))]
    partial class TurboAutoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("TurboProject.Models.Entities.Announcement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AppUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte>("BanTypeId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("CurrencyId")
                        .HasColumnType("tinyint");

                    b.Property<long>("ModelId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("BanTypeId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ModelId");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("TurboProject.Models.Entities.BanType", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("Ban")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BanTypes");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Ban = "Avtobus"
                        },
                        new
                        {
                            Id = (byte)2,
                            Ban = "Furqon"
                        },
                        new
                        {
                            Id = (byte)3,
                            Ban = "Kupe"
                        },
                        new
                        {
                            Id = (byte)4,
                            Ban = "Sedan"
                        },
                        new
                        {
                            Id = (byte)5,
                            Ban = "Suv"
                        },
                        new
                        {
                            Id = (byte)6,
                            Ban = "Universal"
                        });
                });

            modelBuilder.Entity("TurboProject.Models.Entities.CarImageFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AnnouncementId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AnnouncementId");

                    b.ToTable("CarImageFiles");
                });

            modelBuilder.Entity("TurboProject.Models.Entities.Currency", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            CurrencyCode = "Azn"
                        },
                        new
                        {
                            Id = (byte)2,
                            CurrencyCode = "Usd"
                        },
                        new
                        {
                            Id = (byte)3,
                            CurrencyCode = "Euro"
                        });
                });

            modelBuilder.Entity("TurboProject.Models.Entities.FilterAnnouncements", b =>
                {
                    b.Property<string>("Ban")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currencie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MakeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.ToTable("FilterAnnouncements");
                });

            modelBuilder.Entity("TurboProject.Models.Entities.Identity.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("TurboProject.Models.Entities.Make", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("MakeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Makes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            MakeName = "Audi"
                        },
                        new
                        {
                            Id = 2L,
                            MakeName = "Bmw"
                        },
                        new
                        {
                            Id = 3L,
                            MakeName = "Mercedes"
                        });
                });

            modelBuilder.Entity("TurboProject.Models.Entities.Model", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("MakeId")
                        .HasColumnType("bigint");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MakeId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            MakeId = 1L,
                            ModelName = "A5"
                        },
                        new
                        {
                            Id = 2L,
                            MakeId = 1L,
                            ModelName = "Q5"
                        },
                        new
                        {
                            Id = 3L,
                            MakeId = 1L,
                            ModelName = "RS3"
                        },
                        new
                        {
                            Id = 4L,
                            MakeId = 1L,
                            ModelName = "RS7"
                        },
                        new
                        {
                            Id = 5L,
                            MakeId = 1L,
                            ModelName = "Q5 Sportback"
                        },
                        new
                        {
                            Id = 6L,
                            MakeId = 2L,
                            ModelName = "730Le"
                        },
                        new
                        {
                            Id = 7L,
                            MakeId = 2L,
                            ModelName = "M5"
                        },
                        new
                        {
                            Id = 8L,
                            MakeId = 2L,
                            ModelName = "X6"
                        },
                        new
                        {
                            Id = 9L,
                            MakeId = 2L,
                            ModelName = "320Gt"
                        },
                        new
                        {
                            Id = 10L,
                            MakeId = 3L,
                            ModelName = "C180"
                        },
                        new
                        {
                            Id = 11L,
                            MakeId = 3L,
                            ModelName = "C240"
                        },
                        new
                        {
                            Id = 12L,
                            MakeId = 3L,
                            ModelName = "CL 63 AMG"
                        },
                        new
                        {
                            Id = 13L,
                            MakeId = 3L,
                            ModelName = "CLA 180"
                        },
                        new
                        {
                            Id = 14L,
                            MakeId = 3L,
                            ModelName = "E 180"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("TurboProject.Models.Entities.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TurboProject.Models.Entities.Announcement", b =>
                {
                    b.HasOne("TurboProject.Models.Entities.Identity.AppUser", "AppUser")
                        .WithMany("Announcements")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurboProject.Models.Entities.BanType", "BanType")
                        .WithMany("Announcements")
                        .HasForeignKey("BanTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurboProject.Models.Entities.Currency", "Currency")
                        .WithMany("Announcements")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurboProject.Models.Entities.Model", "Model")
                        .WithMany("Announcements")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("BanType");

                    b.Navigation("Currency");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("TurboProject.Models.Entities.CarImageFile", b =>
                {
                    b.HasOne("TurboProject.Models.Entities.Announcement", "Announcement")
                        .WithMany("CarImageFiles")
                        .HasForeignKey("AnnouncementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Announcement");
                });

            modelBuilder.Entity("TurboProject.Models.Entities.Model", b =>
                {
                    b.HasOne("TurboProject.Models.Entities.Make", "Make")
                        .WithMany("Models")
                        .HasForeignKey("MakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Make");
                });

            modelBuilder.Entity("TurboProject.Models.Entities.Announcement", b =>
                {
                    b.Navigation("CarImageFiles");
                });

            modelBuilder.Entity("TurboProject.Models.Entities.BanType", b =>
                {
                    b.Navigation("Announcements");
                });

            modelBuilder.Entity("TurboProject.Models.Entities.Currency", b =>
                {
                    b.Navigation("Announcements");
                });

            modelBuilder.Entity("TurboProject.Models.Entities.Identity.AppUser", b =>
                {
                    b.Navigation("Announcements");
                });

            modelBuilder.Entity("TurboProject.Models.Entities.Make", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("TurboProject.Models.Entities.Model", b =>
                {
                    b.Navigation("Announcements");
                });
#pragma warning restore 612, 618
        }
    }
}
